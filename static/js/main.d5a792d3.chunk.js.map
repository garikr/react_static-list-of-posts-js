{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","hasComments","length","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCbFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KACR,SAAAR,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJhDC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eAED,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,YCHCU,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAcD,EAAKN,SAASQ,OAAS,EAE3C,OACE,sBAAKd,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,EAAKG,QACtC,cAAC,EAAD,CAAUL,KAAME,EAAKF,UAGvB,mBAAGV,UAAU,iBAAb,SACGY,EAAKR,OAGR,uBAECS,EACG,cAAC,EAAD,CAAaP,SAAUM,EAAKN,WAC5B,mBAAG,UAAQ,oBAAX,iCCpBGU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKjB,UAAU,WAAf,SACGiB,EAAMV,KAAI,SAAAK,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,U,cCevD,IAAMS,EAAQC,EAAgBX,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAdmBS,EAcDP,EAAKO,OAbhBC,EAAgBC,MACrB,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,GAAU,SAahCb,UAT0BgB,EASGV,EAAKJ,GAR3Be,EAAmBC,QACxB,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,GAAU,WAF5C,IAA4BA,EANPH,KAkBRM,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUiB,MAAOA,QCxBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d5a792d3.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(\n      comment => <CommentInfo comment={comment} key={comment.id} />,\n    )}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const hasComments = post.comments.length > 0;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{post.title}</h3>\n        <UserInfo user={post.user} />\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {post.body}\n      </p>\n\n      <hr />\n\n      {hasComments\n        ? <CommentList comments={post.comments} />\n        : <b data-cy=\"NoCommentsMessage\">No comments yet</b>}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo post={post} key={post.id} />)}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport { PostList } from './components/PostList';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserInfo(userId) {\n  return usersFromServer.find(\n    user => user.id === userId || null,\n  );\n}\n\nfunction getCommentsForPost(postId) {\n  return commentsFromServer.filter(\n    comment => comment.postId === postId || null,\n  );\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserInfo(post.userId),\n  comments: getCommentsForPost(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}